// üß† Tema: Creaci√≥n y Manipulaci√≥n B√°sica de Objetos üõ†Ô∏è

// Instrucciones:
// - Le√© cada consigna y escrib√≠ tu c√≥digo donde se indica.
// - Us√° `console.log()` para mostrar los resultados cuando se indique.
// - Ejecut√° este archivo con el comando: node 2-manipulacion-objetos.js

//--------------------------------------------------
// 1. Sintaxis y acceso a propiedades
//--------------------------------------------------

// üëâ Paso 1: Cre√° un objeto llamado 'auto' con las siguientes propiedades:
// - marca: "Toyota"
// - modelo: "Corolla"
// - a√±o: 2020
let auto = {
  marca: "Toyota",
  modelo: "Corolla",
  "a√±o": 2020
};

// üëâ Paso 2: Mostr√° en consola la marca y el modelo del auto usando notaci√≥n de punto.
console.log(`Marca: ${auto.marca}, Modelo: ${auto.modelo}`);
//--------------------------------------------------
// 2. Modificaci√≥n y acceso din√°mico
//--------------------------------------------------

// üëâ Paso 3: Cambi√° el valor de la propiedad 'a√±o' del auto a 2023.
auto["a√±o"] = 2023; 
// üëâ Paso 4: Agreg√° una nueva propiedad llamada 'color' con el valor "rojo" usando notaci√≥n de corchetes.
auto["color"] = "rojo";
// üëâ Paso 5: Elimin√° la propiedad 'modelo' del objeto auto.
delete auto.modelo;
//--------------------------------------------------
// 3. Algoritmos y funciones con objetos
//--------------------------------------------------

// üëâ Paso 6: Cre√° una funci√≥n llamada 'crearLibro' que reciba t√≠tulo, autor y a√±o, y retorne un objeto libro con esas propiedades.
function crearLibro(titulo, autor, a√±o){
   return { titulo, autor, "a√±o": a√±o  };
}

// üëâ Paso 7: Cre√° una funci√≥n llamada 'actualizarPropiedad' que reciba un objeto, el nombre de una propiedad y un nuevo valor, y actualice esa propiedad en el objeto.
function actualizarPropiedad(objeto, propiedad, nuevoValor) {
  objeto[propiedad] = nuevoValor;
  return objeto; 
}

// üëâ Paso 8: Cre√° una funci√≥n llamada 'eliminarPropiedad' que reciba un objeto y el nombre de una propiedad, y elimine esa propiedad del objeto.
function eliminarPropiedad(objeto, propiedad) {
  delete objeto[propiedad];
  return objeto;
 }

// üëâ Paso 9: Cre√° una funci√≥n llamada 'contarPropiedades' que reciba un objeto y retorne la cantidad de propiedades que tiene.
function contarPropiedades(objeto) {
  return Object.keys(objeto).length;
}


//--------------------------------------------------
// 4. Selecci√≥n de opci√≥n correcta
//--------------------------------------------------

// üëâ Paso 10: Seleccion√° la opci√≥n correcta sobre c√≥mo acceder a una propiedad de un objeto:
// Guard√° la letra de la opci√≥n correcta en la variable 'respuestaObj1'.
// Opci√≥n A: obj[propiedad]
// Opci√≥n B: obj.propiedad
// Opci√≥n C: Ambas son correctas
let respuestaObj1 = 'C';

// üëâ Paso 11: Seleccion√° la opci√≥n correcta sobre c√≥mo eliminar una propiedad de un objeto:
// Guard√° la letra de la opci√≥n correcta en la variable 'respuestaObj2'.
// Opci√≥n A: delete obj.propiedad
// Opci√≥n B: obj.eliminar(propiedad)
// Opci√≥n C: obj.propiedad = null
let respuestaObj2 = 'A';

//--------------------------------------------------
// 5. Pr√°ctica combinada
//--------------------------------------------------

// üëâ Paso 12: Us√° las funciones anteriores para crear un libro, actualizar su a√±o, eliminar el autor y contar sus propiedades.
// Guia paso a paso:
// 1. Crear un libro usando la funci√≥n crearLibro (por ejemplo, t√≠tulo: "El Principito", autor: "Antoine de Saint-Exup√©ry", a√±o: 1943).
// 2. Actualizar el a√±o del libro a 1950 usando la funci√≥n actualizarPropiedad.
// 3. Eliminar la propiedad 'autor' del libro usando la funci√≥n eliminarPropiedad.
// 4. Contar cu√°ntas propiedades tiene el libro usando la funci√≥n contarPropiedades.
// Mostr√° los resultados en consola.
 libro = crearLibro("El Principito", "Antoine de Saint-Exup√©ry", 1943);
console.log("1) Libro creado:", libro);

actualizarPropiedad(libro, "a√±o", 1950);
console.log("2) Despu√©s de actualizar a√±o:", libro);

eliminarPropiedad(libro, "autor");
console.log("3) Despu√©s de eliminar autor:", libro);

const cantidad = contarPropiedades(libro);
console.log("4) Cantidad de propiedades:", cantidad);


module.exports = {
  auto,
  crearLibro,
  actualizarPropiedad,
  eliminarPropiedad,
  contarPropiedades,
  respuestaObj1,
  respuestaObj2,
};