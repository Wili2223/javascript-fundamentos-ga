// üß† Tema: ¬øQu√© es la complejidad algor√≠tmica?
// Ejecut√° este archivo con: node 01-que-es-complejidad.js
// Complet√° los pasos y respond√© en comentarios donde se indique.
//--------------------------------------------------
// 1. Definici√≥n
//--------------------------------------------------
// üëâ Paso 1: Escrib√≠ con tus palabras en un comentario qu√© es la complejidad algor√≠tmica y para qu√© sirve.

//Es una forma de medir el rendimiento de un algoritmo en funci√≥n de la cantidad de recursos que utiliza, 
//como el tiempo de ejecuci√≥n y la memoria que consume. Su principal prop√≥sito es ayudarnos a predecir 
//c√≥mo se comportar√° un algoritmo a medida que el tama√±o de los datos de entrada aumenta.

//--------------------------------------------------
// 2. Reflexi√≥n
//--------------------------------------------------
// üëâ Paso 2: ¬øPor qu√© es importante comparar la eficiencia de diferentes algoritmos?
// Respond√© en comentario.

//Es crucial comparar la eficiencia de los algoritmos para elegir la mejor soluci√≥n para un problema dado.
 //No todos los algoritmos son igualmente eficientes. Un algoritmo que funciona bien con un peque√±o conjunto 
 //de datos podr√≠a volverse extremadamente lento o consumir demasiada memoria cuando se enfrenta a un conjunto
  //de datos grande.  Al comparar la complejidad, podemos prever cu√°l de las soluciones tendr√° el mejor 
  //rendimiento a gran escala, lo que es vital para construir aplicaciones robustas y escalables

//--------------------------------------------------
// 3. M√∫ltiple choice
//--------------------------------------------------
// ‚ùì ¬øQu√© mide la complejidad algor√≠tmica?
let respuestaMC1 = 'A';
// respuestaMC1 = 'A'; // A. Qu√© tan eficiente es un algoritmo
// respuestaMC1 = 'B'; // B. El lenguaje de programaci√≥n
// respuestaMC1 = 'C'; // C. El dise√±o visual

//--------------------------------------------------
// 4. Verdadero o falso
//--------------------------------------------------
let respuestaVF1 = false; // "La complejidad algor√≠tmica solo mide el tiempo, no la memoria"
let respuestaVF2 = true; // "Comparar algoritmos ayuda a elegir mejores soluciones"

//--------------------------------------------------
// No modifiques el c√≥digo debajo de este comentario
//--------------------------------------------------
module.exports = {
    respuestaMC1,
    respuestaVF1,
    respuestaVF2,
};
